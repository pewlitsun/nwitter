{"version":3,"sources":["myBase.js","routes/Profile.js","components/AuthForm.js","routes/Auth.js","components/Nweet.js","components/NweetFactory.js","routes/Home.js","components/Navigation.js","components/Router.js","components/App.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebaseInstance","authService","dbService","storageService","userObject","refreshUser","history","useHistory","useState","displayName","newDisplayName","setNewDisplayName","getMyNweets","a","collection","where","uid","orderBy","get","nweets","console","log","docs","map","doc","data","useEffect","onSubmit","event","preventDefault","displayname","updateProfile","className","onChange","value","target","type","autoFocus","placeholder","style","marginTop","onClick","signOut","push","AuthForm","email","setEmail","password","setPassword","newAccount","setNewAccount","error","setError","name","createUserWithEmailAndPassword","signInWithEmailAndPassword","message","required","prev","Auth","onSocialClick","provider","auth","GoogleAuthProvider","signInWithPopup","Nweet","nweetObj","isOwner","editing","setEditing","text","newNweet","setNewNweet","onDeleteClick","window","confirm","id","delete","refFromURL","attachmentUrl","toggleEditing","update","src","icon","faTrash","faPencilAlt","NweetFactory","nweet","setNweet","attachment","setAttachment","attachmentRef","ref","child","uuidv4","putString","response","getDownloadURL","nweetObject","createTime","Date","now","creatorId","add","maxLength","htmlFor","faPlus","opacity","backgroundImage","faTimes","Home","setNweets","onSnapshot","nweetArray","key","Navigation","display","justifyContent","to","marginRight","faTwitter","color","size","marginLeft","flexDirection","alignItems","fontSize","faUser","AppRouter","isLoggedIn","maxWidth","width","margin","exact","path","Profile","App","init","setInit","setIsLoggedIn","setUserObject","onAuthStateChanged","user","args","currentUser","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e218b8a6.chunk.js","sourcesContent":["import * as firebase from \"firebase/app\";\r\nimport 'firebase/auth'\r\nimport 'firebase/firestore'\r\nimport 'firebase/storage'\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY,\r\n    authDomain: process.env.REACT_APP_API_AUTH_DOMAIN,\r\n    databaseURL: process.env.REACT_APP_API_DATABASE_URL,\r\n    projectId: process.env.REACT_APP_API_PROJECT_ID,\r\n    storageBucket: process.env.REACT_APP_API_STORAGE_BUCKET,\r\n    messagingSenderId: process.env.REACT_APP_API_MESSAGIN_ID,\r\n    appId: process.env.REACT_APP_API_APP_ID,\r\n    measurementId: process.env.REACT_APP_API_MEASUREMENT_ID\r\n  };\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nexport const firebaseInstance = firebase;\r\n\r\nexport const authService = firebase.auth();\r\nexport const dbService = firebase.firestore();\r\nexport const storageService = firebase.storage();","import { authService, dbService } from 'myBase';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\nexport default ({userObject, refreshUser}) => {\r\n    const history = useHistory();\r\n    const [newDisplayName, setNewDisplayName] = useState(userObject.displayName);\r\n    const onSignOutCLick = () =>{\r\n        authService.signOut();\r\n        history.push('/');\r\n    }\r\n    const getMyNweets = async()=>{\r\n        const nweets = await dbService.collection('nweets')\r\n        .where('creatorId','==',userObject.uid)\r\n        .orderBy('createdAt','asc')\r\n        .get();\r\n        console.log(nweets.docs.map(doc => doc.data()))\r\n    }\r\n    useEffect(()=>{\r\n        getMyNweets();\r\n    },[])\r\n\r\n    const onChange = (event) =>{\r\n        const {\r\n            target:{value}\r\n        } = event;\r\n        setNewDisplayName(value)\r\n    }\r\n\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        if(newDisplayName !== userObject.displayname){\r\n            await userObject.updateProfile({\r\n                displayName:newDisplayName\r\n            });\r\n            refreshUser();\r\n        }\r\n    }\r\n    return (\r\n\r\n      <div className=\"container\">\r\n        <form onSubmit={onSubmit} className=\"profileForm\">\r\n          <input\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            autoFocus\r\n            placeholder=\"Display name\"\r\n            value={newDisplayName}\r\n            className=\"formInput\"\r\n          />\r\n          <input\r\n            type=\"submit\"\r\n            value=\"Update Profile\"\r\n            className=\"formBtn\"\r\n            style={{\r\n              marginTop: 10,\r\n            }}\r\n          />\r\n        </form>\r\n        <span className=\"formBtn cancelBtn logOut\" onClick={onSignOutCLick}>\r\n          Log Out\r\n        </span>\r\n      </div>\r\n        )\r\n}","import { authService } from 'myBase';\r\nimport React from 'react';\r\nimport { useState } from 'react';\r\n\r\nconst AuthForm = () => {\r\n    const [email,setEmail] = useState('');\r\n    const [password,setPassword] = useState('');\r\n    const [newAccount, setNewAccount] = useState(true);\r\n    const [error,setError] = useState('');\r\n    const onChange = (event) => {\r\n        const {target:{name,value}} = event;\r\n\r\n        if(name === 'email'){\r\n            setEmail(value)\r\n        }else{\r\n            setPassword(value)\r\n        }\r\n    }\r\n    const onSubmit = async (event) => {\r\n        event.preventDefault();\r\n        let data;\r\n        try { \r\n            if(newAccount){\r\n                data = await authService.createUserWithEmailAndPassword(email, password            )\r\n            }else {\r\n                data = await authService.signInWithEmailAndPassword(email, password)\r\n            }\r\n        }catch ( error){\r\n            setError(error.message);\r\n        }\r\n    }\r\n\r\n    const toggleAccount = () => { setNewAccount((prev) => !prev); };\r\n\r\n    return(        \r\n    <><form onSubmit = {onSubmit}  className=\"container\">\r\n        <input className=\"authInput\" name='email' type='text' placeholder='' required value={email} onChange={onChange} />\r\n        <input className=\"authInput\" name='pass' type='password' placeholder='' required value={password} onChange={onChange} />\r\n        <input className=\"authInput authSubmit\" type='submit' value={newAccount ? 'Sign up' : 'Sign in'} />\r\n        {error && <span className=\"authError\">{error}</span>}\r\n    </form>\r\n    <span className=\"authSwitch\" onClick={toggleAccount}>{newAccount ? 'Sign in' : 'Sign up'} </span>\r\n    </>)\r\n}\r\n\r\nexport default AuthForm;","import AuthForm from 'components/AuthForm';\r\nimport { authService, firebaseInstance } from 'myBase';\r\nimport React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport {\r\n  faTwitter,\r\n  faGoogle,\r\n  faGithub,\r\n} from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst Auth = () => {\r\n    const onSocialClick = async (event) => {\r\n         const provider = new firebaseInstance.auth.GoogleAuthProvider();\r\n         await authService.signInWithPopup(provider);\r\n    }\r\n    return (<div>\r\n        <AuthForm/>\r\n        <div>\r\n            <button onClick={onSocialClick}>Google Log in</button>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\nexport default Auth;","import { dbService, storageService } from 'myBase';\r\nimport React, { useState } from 'react';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faPencilAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Nweet = ({ nweetObj, isOwner }) => {\r\n    const [editing, setEditing] = useState(false);\r\n    const [newNweet, setNewNweet] = useState(nweetObj.text);\r\n    const onDeleteClick = async () => {\r\n        const ok = window.confirm('Are you sure?')\r\n        if (ok) {\r\n            await dbService.doc(`nweets/${nweetObj.id}`).delete();\r\n            await storageService.refFromURL(nweetObj.attachmentUrl).delete();\r\n        }\r\n    }\r\n\r\n    const toggleEditing = () => {\r\n        setEditing((prev) => !prev);\r\n    }\r\n\r\n    const onSubmit = async(event) =>{\r\n        event.preventDefault();\r\n        console.log(nweetObj,newNweet);\r\n        await dbService.doc(`nweets/${nweetObj.id}`).update({\r\n            text:newNweet\r\n        })\r\n        toggleEditing();\r\n    }\r\n    const onChange =  (event) =>{\r\n        const {\r\n            target:{value}\r\n        } = event;\r\n\r\n        setNewNweet(value);\r\n    }\r\n\r\n    return (\r\n        <div className=\"nweet\">\r\n            {\r\n                editing ? <>\r\n                    <form onSubmit={onSubmit}  className=\"container nweetEdit\">\r\n                        <input className=\"formInput\" type='text' onChange={onChange} value={newNweet} required></input>\r\n                        <input className=\"formBtn\"  type='submit' value='Update'></input>\r\n                    </form>\r\n                    <span onClick={toggleEditing} className=\"formBtn cancelBtn\">\r\n                        Cancel\r\n                    </span>\r\n                </> : <>\r\n                        <h4>{nweetObj.text}</h4>\r\n                        {nweetObj.attachmentUrl && <img src={nweetObj.attachmentUrl} />}\r\n                        {isOwner && (\r\n                                        <div className=\"nweet__actions\">\r\n                                        <span onClick={onDeleteClick}>\r\n                                          <FontAwesomeIcon icon={faTrash} />\r\n                                        </span>\r\n                                        <span onClick={toggleEditing}>\r\n                                          <FontAwesomeIcon icon={faPencilAlt} />\r\n                                        </span>\r\n                                      </div>)}\r\n                    </>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nweet;","import { dbService, storageService } from 'myBase';\r\nimport React, { useState } from 'react';\r\nimport {v4 as uuidv4} from 'uuid';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPlus, faTimes } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst NweetFactory = ({userObject}) => {\r\n    const [nweet, setNweet] =useState('');\r\n    const [attachment , setAttachment] = useState();\r\n\r\n    const onSubmit = async (event) =>{\r\n        if (nweet === \"\") {\r\n            return;\r\n          }\r\n        event.preventDefault();\r\n        let attachmentUrl='';\r\n        if(attachment !=''){\r\n            const attachmentRef = storageService.ref().child(`${userObject.uid}/${uuidv4()}`)\r\n            const response =  await attachmentRef.putString(attachment, 'data_url')\r\n            attachmentUrl = await response.ref.getDownloadURL();\r\n        }\r\n                const nweetObject = {\r\n                    text:nweet,\r\n                    createTime : Date.now(),\r\n                    creatorId : userObject.uid,\r\n                    attachmentUrl\r\n                }\r\n\r\n        await dbService.collection('nweets').add(nweetObject);\r\n        setNweet('');\r\n        setAttachment('');\r\n    }\r\n\r\n    const onChange = (event) =>{\r\n        const {target:{value}} = event;\r\n        setNweet(value);\r\n    }\r\n\r\n    const onFileChange = (event) => {\r\n        const {\r\n            target:{files}\r\n        } = event;\r\n\r\n        const theFile = files[0];\r\n        const reader = new FileReader();\r\n        reader.onload = (event) =>{\r\n            const {\r\n                currentTarget:{result}\r\n            } = event\r\n            setAttachment(result);\r\n        }\r\n        try {\r\n            reader.readAsDataURL(theFile);\r\n        } catch (error) {\r\n            console.log(error)            \r\n        }\r\n    }\r\n\r\n    const onClearAttachment = () => {\r\n        setAttachment('');\r\n    }\r\n    return (\r\n        <form onSubmit={onSubmit} className=\"factoryForm\">\r\n      <div className=\"factoryInput__container\">\r\n        <input\r\n          className=\"factoryInput__input\"\r\n          value={nweet}\r\n          onChange={onChange}\r\n          type=\"text\"\r\n          placeholder=\"What's on your mind?\"\r\n          maxLength={120}\r\n        />\r\n        <input type=\"submit\" value=\"&rarr;\" className=\"factoryInput__arrow\" />\r\n      </div>\r\n      <label htmlFor=\"attach-file\" className=\"factoryInput__label\">\r\n        <span>Add photos</span>\r\n        <FontAwesomeIcon icon={faPlus} />\r\n      </label>\r\n        \r\n        <input id=\"attach-file\" value={nweet} onChange={onChange} type='text' placeholder='What is on your mind' style={{\r\n          opacity: 0,\r\n        }}></input>\r\n        {/* <input type='file' accept='image/*' onChange={onFileChange}></input> */}\r\n        {/* <input type='submit' value='nweet'></input> */}\r\n        {attachment && (\r\n        <div className=\"factoryForm__attachment\">\r\n          <img\r\n            src={attachment}\r\n            style={{\r\n              backgroundImage: attachment,\r\n            }}\r\n          />\r\n          <div className=\"factoryForm__clear\" onClick={onClearAttachment}>\r\n            <span>Remove</span>\r\n            <FontAwesomeIcon icon={faTimes} />\r\n            </div></div>)}\r\n    </form>)    \r\n}\r\n\r\nexport default NweetFactory;","import Nweet from 'components/Nweet';\r\nimport NweetFactory from 'components/NweetFactory';\r\nimport { dbService, storageService } from 'myBase';\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nconst Home = ({userObject}) => {\r\n    const [nweets, setNweets] = useState([]);\r\n\r\n    useEffect(()=>{\r\n        dbService.collection('nweets').onSnapshot(onSnapshot=>{\r\n            const nweetArray = onSnapshot.docs.map(doc =>({\r\n                id:doc.id,\r\n                ...doc.data()\r\n            }))\r\n            setNweets(nweetArray);\r\n         })\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"container\">\r\n                <NweetFactory userObject={userObject}/>\r\n            <div style={{ marginTop: 30 }}>\r\n                {nweets.map((nweet) => (\r\n                <Nweet key = {nweet.id} nweetObj={nweet} isOwner={nweet.creatorId === userObject.uid}/>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default Home;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTwitter } from \"@fortawesome/free-brands-svg-icons\";\r\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nconst Navigation = ({userObject}) => {\r\n    return (<nav>\r\n        <ul style={{ display: \"flex\", justifyContent: \"center\", marginTop: 50 }}>\r\n            <li>        <Link to=\"/\" style={{ marginRight: 10 }}>\r\n                <FontAwesomeIcon icon={faTwitter} color={\"#04AAFF\"} size=\"2x\" />\r\n            </Link></li>\r\n            <li>        <Link\r\n                to=\"/profile\"\r\n                style={{\r\n                    marginLeft: 10,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    fontSize: 12,\r\n                }}\r\n            >\r\n                <FontAwesomeIcon icon={faUser} color={\"#04AAFF\"} size=\"2x\" />\r\n                <span style={{ marginTop: 10 }}>\r\n                    {userObject.displayName\r\n                        ? `${userObject.displayName}의 Profile`\r\n                        : \"Profile\"}\r\n                </span>\r\n            </Link></li>\r\n        </ul>\r\n    </nav>)\r\n}\r\n\r\nexport default Navigation;","import React from 'react';\r\nimport {HashRouter as Router, Redirect, Route ,Switch} from 'react-router-dom';\r\nimport Profile from 'routes/Profile';\r\nimport Auth from '../routes/Auth';\r\nimport Home from '../routes/Home';\r\nimport Navigation from './Navigation';\r\n\r\nconst AppRouter = ({ isLoggedIn, userObject, refreshUser }) => {\r\n    return (\r\n        <Router>\r\n            {isLoggedIn && <Navigation userObject={userObject}/>}\r\n            <Switch>\r\n                {isLoggedIn ? (\r\n                              <div\r\n                              style={{\r\n                                maxWidth: 890,\r\n                                width: \"100%\",\r\n                                margin: \"0 auto\",\r\n                                marginTop: 80,\r\n                                display: \"flex\",\r\n                                justifyContent: \"center\",\r\n                              }}\r\n                            >\r\n                        <Route exact path='/'>\r\n                            <Home userObject={userObject}/>\r\n                        </Route>\r\n                        <Route exact path='/profile'>\r\n                            <Profile userObject={userObject} refreshUser= {refreshUser}/>\r\n                        </Route>\r\n                        </div>\r\n                ) : (\r\n                        <Route exact path='/'>\r\n                            <Auth/>\r\n                        </Route>\r\n                    )}\r\n            </Switch>\r\n        </Router>\r\n    )\r\n}\r\n\r\nexport default AppRouter;","import React, {useEffect, useState} from 'react';\nimport AppRouter from './Router';\nimport {authService} from '../myBase'\n\nfunction App() {\n  const [init, setInit] = useState(false);\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\n  const [userObject,setUserObject] = useState(null);\n  useEffect(() => {\n    authService.onAuthStateChanged((user) =>{\n      if(user){\n        setIsLoggedIn(true);\n        setUserObject({\n          displayName:user.displayName,\n          uid:user.uid,\n          updateProfile: (args) => user.updateProfile(args)\n        });\n      }else{\n        setIsLoggedIn(false);\n        // setUserObject(null)\n      }\n      setInit(true);\n    })\n  },[])\n  const refreshUser = () =>{\n    const user = authService.currentUser;\n    setUserObject({\n      displayName:user.displayName,\n      uid:user.uid,\n      updateProfile: (args) => user.updateProfile(args)\n    });\n  }\n  return (\n    <>\n      {init ? <AppRouter refreshUser={refreshUser} isLoggedIn={isLoggedIn} userObject = {userObject}></AppRouter>: 'inital...'}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport \"./style.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}